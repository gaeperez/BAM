package $1$.agents.molecules.buildingblocks;

import java.util.Optional;

import $1$.agents.Agent;
import $1$.agents.molecules.Molecule;
import $1$.cells.Cell;
import $1$.common.DiffusionRate;
import $1$.common.SubcellularLocation;

/**
 * {@linkplain BuildingBlock} represents a simulated buiding block.
 *
 * @author Aitor Blanco Míguez
 * @author Gael Pérez Rodríguez 
 * @see Molecule
 * @see Agent
 */
public abstract class BuildingBlock extends Molecule{
	final private BuildingBlockType type;

	protected BuildingBlock(final double 		                  molecularWeight, 
						    final double  			              radius,
						    final String  			              color, 
						    final SubcellularLocation             maxMembraneToInner,
						    final SubcellularLocation             maxMembraneToOuter,
						    final Optional<Class<? extends Cell>> cellOfCreation,
						    final SubcellularLocation             membraneOfCreation,
						    final DiffusionRate                   diffusionRate,
						    final BuildingBlockType               type) {
		super(molecularWeight, radius, color, maxMembraneToInner, maxMembraneToOuter, 
		      cellOfCreation, membraneOfCreation, diffusionRate);
		this.type          = type;
	}

	/**
    * Returns the {@link BuildingBlockType}.
    *
    * @return The molecule type.
    * @see    BuildingBlockType
    */
	public BuildingBlockType getType() {
		return type;
	}
}
