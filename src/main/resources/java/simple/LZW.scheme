package $1$.agents.molecules.lzws;

import static java.util.Objects.requireNonNull;
import $1$.common.SubcellularLocation;
import $1$.agents.Agent;
import $1$.agents.molecules.Molecule;
import $1$.common.DiffusionRate;

/**
 * {@linkplain LZW} represents a simulated LZW (Low Molecular Weight).
 *
 * @author Aitor Blanco Míguez
 * @author Gael Pérez Rodríguez 
 * @see Molecule
 * @see Agent
 */
public class LZW extends Molecule{
	private LZWType           type;

	private LZW(final String              name,
				final double 		      molecularWeight, 
			    final double  			  radius,
			    final String  			  color, 
			    final SubcellularLocation maxMembraneToInner,
			    final SubcellularLocation maxMembraneToOuter,
			    final String              cellOfCreation,
			    final SubcellularLocation membraneOfCreation,
			    final DiffusionRate       diffusionRate,
			    final LZWType             type) {
		super(name, molecularWeight, radius, color, maxMembraneToInner, maxMembraneToOuter, 
			      cellOfCreation, membraneOfCreation, diffusionRate);		      
			this.type          = type;
	}
	
	/**
     * Constructs and returns a new instance of {@link LZW}.
     * 
     * @param name A {@link String} with the name of the LZW. It cannot be null.
     * @param molecularWeight A {@link Double} with the molecular weight. It cannot be null.
     * @param radius A {@link Double} with the radius of the LZW. It cannot be null.
     * @param color A {@link String} with the color of the LZW. It cannot be null.
     * @param maxMembraneToInner A {@link SubcellularLocation} with the maximum membrane to inner. 
     * 		It cannot be null.
     * @param maxMembraneToOuter A {@link SubcellularLocation} with the maximum membrane to outer. 
     * 		It cannot be null.
     * @param cellOfCreation A {@link String} with the cell of creation of the LZW. 
     * 		It cannot be null.
     * @param membraneOfCreation A {@link SubcellularLocation} with the membrane of creation of the 
     * 		LZW. It cannot be null.
     * @param diffusionRate The {@link DiffusionRate} of the LZW. It cannot be null.
     * @param type The {@link LZWType}. It cannot be null.
     * @return A new instance of LZW.
     * @throws NullPointerException If any of the given arguments is {@code null}.
     * @see Molecule
     * @see SubcellularLocation
     * @see DiffusionRate
     * @see LZWType
     */
	public static LZW lzw(final String              name,
						  final double 		        molecularWeight, 
					      final double  			radius,
					      final String  			color, 
					      final SubcellularLocation maxMembraneToInner,
					      final SubcellularLocation maxMembraneToOuter,
					      final String              cellOfCreation,
					      final SubcellularLocation membraneOfCreation,
					      final DiffusionRate       diffusionRate,
					      final LZWType             type) throws NullPointerException {
		return new LZW(requireNonNull(name), requireNonNull(molecularWeight), requireNonNull(radius),
					   requireNonNull(color), requireNonNull(maxMembraneToInner), requireNonNull(maxMembraneToOuter), 
					   requireNonNull(cellOfCreation), requireNonNull(membraneOfCreation), requireNonNull(diffusionRate),
					   requireNonNull(type));
	}
	
	/**
    * Returns the {@link LZWType}.
    *
    * @return The LZW type.
    * @see    LZWType
    */
	public LZWType getType() {
		return type;
	}
	
	/**
    * Changes the LZW type.
    *
    * @param type The {@link LZWType}.
    * @throws NullPointerException If a {@code null} type is received.
    * @see LZWType
    */
	public void setType(final LZWType type) throws NullPointerException {
		this.type = requireNonNull(type);
	}
}
